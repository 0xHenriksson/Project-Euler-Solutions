#The sequence of triangle numbers is generated by adding the natural numbers. 
#So the 7th triangle number would be 1+2+3+4+5+6+7=28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# What is the value of the first triangle number to have over five hundred divisors?

import math

# Function to calculate the number of divisors using prime factorization
def divisors(n):
    count = 0
    i = 1
    while i <= math.sqrt(n):
        if n % i == 0:
            if n / i == i:
                count = count + 1
            else:
                count = count + 2
        i = i + 1
    return count

# Function to generate triangle numbers and check the number of divisors
def triangle_number_divisors():
    n = 1
    while True:
        triangle_number = n * (n + 1) // 2
        if divisors(triangle_number) > 500:
            return triangle_number
        n += 1

print(triangle_number_divisors())